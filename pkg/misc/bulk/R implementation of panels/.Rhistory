rm(list=ls())
file.name<-"C40962.global"
v<-1##version of land definitions
##################################################################################################
###### Read in panels
as.matrix(read.csv(paste(file.name,".10.layers.csv",sep="")))->temp.panels
n.col<-dim(temp.panels)[1]
dimnames(temp.panels)[[2]]<-rep(1:n.col,10)
rect.layers<-array(NA,dim=c(n.col,n.col,10))
for (p in 1:10)
rect.layers[,,p]<-temp.panels[,(1+(p-1)*n.col):(p*n.col)]
rm(p,temp.panels)
ls()
max(rect.layers)
min(rect.layers)
v<-2##version of land definitions
##################################################################################################
######Assign hexagons to land
##Read land assignments (which was done in ArcView)
library(foreign)
read.dbf(paste(file.name,".land.",v,".dbf",sep=""))->land
n.land<-length(land$ID)
rect.layers[!(rect.layers %in% land$ID)]<-NA
rect.layers[(rect.layers %in% land$ID)]->orig.ID
rect.layers[(rect.layers %in% land$ID)]<-0:(n.land-1)
paste(file.name,".land.",v,".dbf",sep="")
##################################################################################################
######Assign hexagons to land
##Read land assignments (which was done in ArcView)
library(foreign)
read.dbf(paste(file.name,".land.",v,".dbf",sep=""))->land
n.land<-length(land$ID)
rect.layers[!(rect.layers %in% land$ID)]<-NA
rect.layers[1:10,1:10,1]
