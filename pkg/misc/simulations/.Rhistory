setwd("/home/master/dev/geograph/pkg/misc/simulations/")
source("doSimul.R")
source("doSimul.R")
load("/home/master/dev/geograph/pkg/misc/popDensity/lm1.RData")
dat <- getNodesAttr(worldgraph.40k)
myCoef <- coef(lm1)
myCoef
indicLand <- 1* (dat$habitat=="land") # indicatrice de classe pour 'land'
indicSouth <- 1* (getCoords(worldgraph.40k)[,2] < 0) # indicatrice de classe pour 'land'
predLDens <- myCoef[1] + myCoef[2]*dat$meanProd +
    myCoef[3]*dat$nbMonthLessThan15 + myCoef[3]*indicLand +  myCoef[3]*indicSouth
predLDens <- predLDens - min(predLDens)
range(predLDens)
predLDens <- 100*predLDens/max(predLDens)
plot(worldgraph.40k, col=predLDens,res=TRUE)
palette(heat.colors(105))
range(predLDens)
predLDens <- 100*predLDens/max(predLDens)
plot(worldgraph.40k, col=predLDens,res=TRUE)
myCosts <- 100-predLDens
hist(myCosts, col="grey")
myCol <- round((100-myCosts)/100, 10)
myCol <- gray(myCol)
myCol[worldgraph.40k@nodes.attr$sea] <- rgb(1,1,1,1)
plot(worldgraph.40k, col=myCol)
myCosts[worldgraph.40k@nodes.attr$sea] <- 1e10
myCosts[worldgraph.40k@nodes.attr$deselected.land] <- 1e10
myCosts[worldgraph.40k@nodes.attr$landbridge] <- 100
worldgraph.40k <- setFriction(worldgraph.40k, node.costs=myCosts)
worldgraph.40k <- dropDeadEdges(worldgraph.40k, thres=2e5)
isConnected(hgdp)
addis <- list(lon=38.74,lat=9.03)
addis <- closestNode(worldgraph.40k,addis) # this takes a while
doSimul(addis,hgdp, ".") # result: R2=0.7946
temp <- expand.grid(seq(-30,60,by=5), seq(-40,40,by=5))
x <- closestNode(worldgraph.40k,temp) # this takes a while
conCom <- connectedComp(getGraph(worldgraph.40k)) # get connected sets
conCom <- conCom[order(sapply(conCom,length),decreasing=TRUE)] # sort by decr. size
conCom <- conCom[[1]]
myCandidates <- intersect(x,conCom) # retained candidates
length(myCandidates)
temp <- findInLayer(getCoords(worldgraph.40k)[myCandidates,], attr="CONTINENT")
myCandidates <- row.names(temp[temp=="Africa",,drop=FALSE]) # keep nodes in Africa
plot(worldgraph.40k)
points(getCoords(worldgraph.40k)[myCandidates,])
res <- doSimul(myCandidates, hgdp, "outputs") # this can take hours (3 sim/minute)
range(res, na.rm=TRUE)
res.1.2=res
save(res.1.2, file="/home/master/dev/geograph/pkg/misc/simulations/res.1.2.RData")
getwd(0
getwd()
res.1.2
which.max(res.1.2)
dist.phy <- dijkstraBetween(hgdp)
dist.phy <- dijkstraBetween(hgdpPlus)
save(dist.phy, "dist.phy.RData")
save(dist.phy, file="dist.phy.RData")
fst
fst <- read.csv("/home/master/dev/geograph/pkg/misc/HGDP/76pop.fst")
dim(fst)
dim(dist.phy)
dim(as.matrix(dist.phy))
class(dist.phy)
length(dist.phy)
dist.phy[[1]]
sapply(dist.phy, function(e) sum(e$length_detail))
pairPath <- dist.phy
pairPath <- dijkstraBetween(hgdpPlus) # takes around 20 minutes

pairPath <- dist.phy
save(pairPath, file="pairPath.RData")
dist.phy <- sapply(dist.phy, function(e) sum(e$length_detail))
dist.phy <- sapply(dist.phy[], function(e) sum(e$length_detail))
dist.phy <- sapply(pairPath, function(e) sum(e$length_detail))
pairPath[[1]]$length_detail
length(pairPath)
pairPath[[2492]]$length_detail
pairPath[[2492]]
dist.phy <- sapply(pairPath[-length(pairPath)], function(e) sum(e$length_detail))
dist.phy <- sapply(pairPath[-length(pairPath)], function(e) sum(e$length_detail) )
dist.phy <- sapply(pairPath[-length(pairPath)], function(e) sum(e$length_details) )
head(dist.phy)
pairPath[[1]]$length_details
pairPath[[1]]$length_detail
dist.phy <- sapply(pairPath[-length(pairPath)], function(e) sum(e$length_detail) )
dist.phy <- lapply(pairPath[-length(pairPath)], function(e) sum(e$length_detail) )
dist.phy <- lapply(pairPath[1:2], function(e) sum(e$length_detail) )
dist.phy <- lapply(pairPath[1:2], function(e) sum(e$length_detail) )
pairPath[[1]]$length_detail
pairPath[[1]]$length_detail[[1]]
dist.phy <- sapply(pairPath[-length(pairPath)], function(e) sum(e$length_detail[[1]]) )
head(dist.phy)
fst <- read.table("/home/master/dev/geograph/pkg/misc/HGDP/76pop.fst")
dim(fst)
?dist
as.dist(1:9)
as.dist(1:8)
as.dist(1:7)
as.dist(1:6)
as.dist(1:4)
as.dist(1:3)
toto <- as.dist(1:4)
str(toto)
unclass(toto)
toto
toto[1]
as.dist(1:6)
toto <- as.dist(1:6)
toto
unclass(toto)
attr(dist.phy , "Size") <- 76
attr(dist.phy , "Diag") <- FALSE
attr(dist.phy , "Upper") <- FALSE
class(toto)
class(dist.phy) <- "dist"
dist.phy
plot(dist.phy~fst)
plot(as.matrix(dist.phy)~fst)
plot(unclass(as.matrix(dist.phy))~unclass(fst))
hgdpPlus
unclass(toto)
toto <- matrix(1:9,ncol=3)
str(toto)
toto <- as.dist(toto)
str(toto)
toto
dist(1:3)
toto <- dist(1:4)
toto
str(toto)
temp <- dist(1:76)
attributes(toto)
attributes(toto)
dist.phy <- sapply(pairPath[-length(pairPath)], function(e) sum(e$length_detail[[1]]) )

attributes(dist.phy) <- attributes(temp)
dist.phy
 dist.phy <- sapply(pairPath[-length(pairPath)], function(e) sum(e$length_detail[[1]]) )

dist.phy
length(dist.phy)
76*75/2
length(pairPath)
length(pairPath)
75*74/2
74*73/2
73*72/2
72*71/2
702*71/2
72*71/2
70*71/2
q()
n
